<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

   <!-- Spring Security 인증처리로직를 정의한 클래스 -->
   <sec:http use-expressions="true" auto-config="true" >
      
      <sec:form-login login-page="/user/login/form"
         login-processing-url="/user/login" 
         username-parameter="accountId"
         password-parameter="accountPw" 
         default-target-url="/home"
         authentication-failure-handler-ref="memberAuthenticationFailureHandler"
         authentication-success-handler-ref="memberAuthenticationSuccessHandler"
         />
 	<sec:logout
		logout-url="/user/logout"
		invalidate-session="true"
		delete-cookies="JSESSIONID"
		logout-success-url="/home?status=logout"
	/>
		<!-- 권한이 없는 사용자의 접근을 막고 처리해주는 페이지로 이동시켜준다 -->
	<sec:access-denied-handler ref="accessDecsionHandler"/>	
	
      <!-- 중복 로그인 방지 설정 error-if-maximum-exceeded="true" 이후에 로그인 시도하는 사용자의 접속을 
         막는다 -->
      <sec:session-management>
         <sec:concurrency-control max-sessions="4"
            error-if-maximum-exceeded="true" />
      </sec:session-management>
      	<!-- iframe 허용 -->
         <sec:headers>
   			<!--<sec:frame-options from-parameter="https://www.youtube.com"/>-->
   			<sec:frame-options policy="SAMEORIGIN"/>
   		</sec:headers>
   		
   		<sec:csrf request-matcher-ref="csrfSecurityRequestMatcher"/>
   </sec:http>

   <sec:authentication-manager>
      <sec:authentication-provider ref="memberAuthenticationProvider" />
   </sec:authentication-manager>
   
   
   <context:component-scan base-package="apeak.startupcampus.security"/>
   <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
   <bean id="accessDecsionHandler" class="apeak.startupcampus.security.AccessDecsionHandler"/>


	<bean id="csrfSecurityRequestMatcher" class="apeak.startupcampus.security.CsrfSecurityRequestMatcher"/>
	
</beans>